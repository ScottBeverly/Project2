{"version":3,"sources":["Components/Header/Header.js","Components/Footer/Footer.js","Components/Home/Home.js","Components/Dash/Dash.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Footer","Home","src","Dash","props","useState","day","setDay","nasaUrl","input","setInput","data","setData","useEffect","a","fetch","res","json","console","log","makeApiCall","onSubmit","e","preventDefault","onChange","target","value","type","title","date","explanation","url","Main","exact","path","component","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wUAoBeA,MAhBf,WACE,OACE,yBAAKC,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,KACL,qCAEJ,kBAAC,IAAD,CAAMA,GAAI,SACN,0CAEJ,kBAAC,IAAD,CAAMA,GAAG,KACL,0BAAMD,UAAU,QAAhB,W,MCHKE,MARf,WACE,OACE,yBAAKF,UAAU,QACb,+C,MCYSG,MAff,WACE,OACE,yBAAKH,UAAU,QACT,yBAAKA,UAAU,MAAKI,IAAI,oCAE1B,yBAAKJ,UAAU,SACb,6CACA,4lB,sCCoDKK,MA3Df,SAAcC,GAAQ,IAAD,EAEEC,qBAFF,mBAEZC,EAFY,KAERC,EAFQ,KAGbC,EAAO,oDAAgDF,EAAhD,qDAHM,EAIOD,mBAAS,IAJhB,mBAIZI,EAJY,KAILC,EAJK,OAKIL,mBAAS,IALb,mBAKZM,EALY,KAKPC,EALO,KA4BnB,OArBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACAC,MAAMP,GADN,cACZQ,EADY,gBAECA,EAAIC,OAFL,OAEZA,EAFY,OAGlBC,QAAQC,IAAIF,GACZL,EAAQK,GAJU,2CAAH,qDAMnBG,KACG,CAACd,IAeA,yBAAKR,UAAU,QACb,iCACM,yBAAKA,UAAU,OAAMI,IAAI,oCACzB,qEAA0C,6BAA1C,+BAGH,0BAAMmB,SAnBQ,SAAAC,GACnBA,EAAEC,iBACFhB,EAAOE,KAiBF,4BAEC,2BACEe,SAhBW,SAAAF,GAClBZ,EAASY,EAAEG,OAAOC,QAgBXC,KAAK,OACLD,MAAOjB,IACT,2BACEkB,KAAK,SACLD,MAAM,YAEV,yBAAK5B,UAAU,UACX,4BAAKa,EAAKiB,OACV,4BAAKjB,EAAKkB,MACV,2BAAIlB,EAAKmB,aACT,yBAAK5B,IAAKS,EAAKoB,U,OClCZC,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWlC,IACnC,kBAAC,IAAD,CAAOiC,KAAK,QAAOE,OAAQ,SAAAhC,GAAK,OAAI,kBAAC,EAAD,Y,MCK7BiC,MAVf,WACE,OACE,yBAAKvC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDcwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpC,QAAQoC,MAAMA,EAAMC,c","file":"static/js/main.00668e1d.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport {Link} from 'react-router-dom'\n\nfunction Header() {\n  return (\n    <div className='Head'>\n      <Link to='/'>\n          <h2>Home</h2>\n      </Link>\n      <Link to ='/Dash'>\n          <h2>Dashboard</h2>\n      </Link>\n      <Link to='/'>\n          <span className='NASA'>NASA</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className='Foot'>\n      <h2>Aero Explorer</h2>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './Home.css'\n\nfunction Home() {\n  return (\n    <div className='Home'>\n          <img className='img'src='https://i.imgur.com/lX406Hj.jpg'>\n          </img>\n        <div className='about'>\n          <h3>Aero Explorer</h3>\n          <p>Welcome to Aero-Explorer! Here you will be able to discover historic and present out of this world information about one of the greatest unknowns in our universe. Space has baffled engineers and explorers of the likes for many centuries Until NASA (The National Aeronautics and Space Administration) was banded together in 1958. Since then NASA has discovered more about our universe than we could ever imagine. For those that are curious about all the major discoveries that have happened over the years, click over and enter a date, and prepare for your space journey! \n          </p>\n        </div>\n    </div>\n    \n  );\n}\n\nexport default Home;","import React,{useState, useEffect} from 'react';\nimport './Dash.css';\n\nfunction Dash(props) {\n\n  const [day,setDay] = useState()\n  const nasaUrl = `https://api.nasa.gov/planetary/apod?&date=${day}&api_key=5922S8UNUwz5xhymJjtNTL4fBJwyhnqeeUEZYotx`\n  const [input, setInput] = useState('')\n  const [data,setData] = useState([])\n  \n  useEffect(()=>{\n  const makeApiCall = async () => {\n    const res = await fetch(nasaUrl);\n    const json = await res.json();\n    console.log(json)\n    setData(json)      \n};\nmakeApiCall();\n}, [day]);\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    setDay(input)\n    }\n    \n\n  const handleChange = e => {\n     setInput(e.target.value)\n    }\n  \n  \n  return (\n  \n    <div className='Dash'>\n      <section>\n            <img className='img2'src='https://i.imgur.com/XnZT8xc.jpg'></img>\n            <h2>Want to know more about outer-space ? <br></br>\n            Enter a Date to learn more. \n            </h2> \n         <form onSubmit={handleSubmit}>\n            Enter a date (YYYY-MM-DD)\n          <input  \n            onChange={handleChange}\n            type='text'\n            value={input}/>\n          <input \n            type=\"submit\" \n            value=\"submit\"/>\n        </form> \n        <div className='render'>\n            <h1>{data.title}</h1>\n            <h2>{data.date}</h2>\n            <p>{data.explanation}</p>\n            <img src={data.url}/>\n        </div>\n      </section>\n    </div>\n  );\n}\n\n\n\nexport default Dash;","import React, {useState, useEffect} from 'react';\nimport Home from '../Home/Home'\nimport Dash from '../Dash/Dash'\nimport {Route, Switch} from 'react-router-dom'\n\n\n\n\nfunction Main() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path= '/'  component={Home}/>\n        <Route path='/Dash'render={props => <Dash/>}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Main;","import React, {useState}from 'react';\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\nimport Main from './Components/Main/Main'\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Footer />\n      <Main />\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}